class Node:
    def __init__(self,data=None,next=None):
        self.data = data
        self.next = next
        
class Linkedlist:
    def __init__(self):
        self.head = None 
        
    #Utility Function:
    def printlist(self):
        if self.head is None:
            return
        itr = self.head
        llstr=" "
        while itr: 
            llstr += str(itr.data)+'-->'
            itr = itr.next
        print(llstr)
        
    #Insert at Beginning:
    def insert_at_beg(self,data):
        node = Node(data,self.head)
        self.head = node
        
    #Get Length of list:
    def get_length(self):
        itr = self.head 
        count = 0
        while itr:
            itr = itr.next
            count += 1
        return count

    # Deleting first element of SLL:
    def deleteNode(self,position):
        if self.head is None:
            return
        itr = self.head
        if (position==0):
            self.head = itr.next
            itr = None 
            return
            
#Execution of program:
if __name__ == '__main__':
    ll = Linkedlist()
    # ll.head = Node("Null")
    # print(ll.head.data)
    ll.insert_at_beg("banana")
    ll.insert_at_beg("chiku")
    ll.insert_at_beg("apple")
    ll.insert_at_beg("grapes")
    ll.insert_at_beg("mango")
    ll.printlist()
    print("The Length of list: ",ll.get_length())
    ll.deleteNode(0)
    print("List after deleting starting value: ")
    ll.printlist()
    