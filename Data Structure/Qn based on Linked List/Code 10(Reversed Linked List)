class Node:
    def __init__(self, data=None, next=None):
        self.data = data 
        self.next = next 
class Linkedlist():
    def __init__(self):
        self.head = None
        
    # Inserting the value at Beginning:
    def insert_at_beg(self,data):
        node = Node(data, self.head)
        self.head = node
    
    # Utility Function:
    def printlist(self):
        if self.head is None: # if list is empty
            print("Linked list is Empty")
            return
        #if list has some values:
        itr = self.head
        llstr = ' ' # created a blank list 
        while itr:
            llstr += str(itr.data)+ '--->'
            itr = itr.next
        print(llstr)
        
    #Inserting the Values from End:
    def insert_at_end(self,data):
        if self.head is None: # if list is empty
            node = Node(data,None)
            return
        itr= self.head # if list has some Values
        while itr.next:
            itr = itr.next
        itr.next = Node(data,None)# as at end the link should be Null

#####Reversing a Linked List##########################
    def reverse(self): # Iterative Method
        prev = None
        itr = self.head
        while(itr is not None):
            next = itr.next
            itr.next = prev
            prev = itr
            itr=next
        self.head = prev
    ##Reversing Linked List in Recursive Method:   
    def reverse_rec(self,head):
        #if head is empty or has reached the list end.
        if head is None or head.next is None:
            return head
            
        # Reverse the rest list:
        rest = self.reverse_rec(head.next)
        #Put first Element at the end:
        head.next.next = head
        head.next = None
        #Fix the header pointer
        return rest
        
    #Return the Linked List in display Format:
    def __str__(self):
        linkedListstr=" "
        itr = self.head
        while itr:
            linkedListstr =(linkedListstr + str(itr.data)+" ")
            itr = itr.next
        return linkedListstr

#execution of program 
if __name__ == '__main__':
    ll = Linkedlist()
    ll.insert_at_beg(141)
    ll.insert_at_beg(302)
    ll.insert_at_beg(164)
    # ll.printlist()
    ll.insert_at_end(530)
    ll.insert_at_end(474)
    ll.insert_at_end(251)
    ll.insert_at_end(832)
    ll.insert_at_end(101)
    ## Printing###
    print ("Given Linked List: ")
    ll.printlist() 
    ll.reverse() 
    print ("\nReversed Linked List: ")
    ll.printlist() 
    
    ll.head = ll.reverse_rec(ll.head)
    print("Reversed Linked List: ")
    print(ll)